
def kao(N):
	a = [-1, 0]
	for i in range(2, N, 2):
		b = a[::]
		for j in a:
			b.append(2 ** i + j)
		a = b
	del a[0]
	for i in range(1, N, 2):
		a.append(2**i - 1)
	a = sorted(a)
	# for i in a:
	# 	print(bin(2 ** N + i)[-N:], i)
	a.append(2**N-1)
	a.append(2**N)
	return sum(a)


def hao(N):
	mod = 1000000007
	s0 = 2
	s1 = -1
	a = [-1, 0]
	b = 4
	for i in range(2, N, 2):
		s0, s1 = (2 * s0) % mod, (2 * s1 + b * s0) % mod
		b = b * 4 % mod
	b = 2
	for i in range(1, N, 2):
		s1 = (s1 + b) % mod
		b = b * 4 % mod
	s1 += pow(2, N + 1, mod)
	s1 -= N // 2
	return s1 % mod

print(hao(12345678))
assert hao(1234) == 690421393
# N = 12
# print()
# k = kao(N)
# print()
# h = hao(N)
# print()
# print(k, h)

'''
000000000001
000000000111
000000011111


000000000000
000000000100
000000000011

000000001111

000000010000
000000010011
000000010100

000000111111
000001000000
000001000011
000001000100
000001001111
000001010000
000001010011
000001010100
000001111111
000011111111
000100000000
000100000011
000100000100
000100001111
000100010000
000100010011
000100010100
000100111111
000101000000
000101000011
000101000100
000101001111
000101010000
000101010011
000101010100
000111111111
001111111111
010000000000
010000000011
010000000100
010000001111
010000010000
010000010011
010000010100
010000111111
010001000000
010001000011
010001000100
010001001111


'''